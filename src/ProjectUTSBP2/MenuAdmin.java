package ProjectUTSBP2;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;

public class MenuAdmin extends javax.swing.JFrame {

    /**
     * Creates new form MenuAdmin
     */
    public void showRekap() {
        DefaultTableModel modelMenu = (DefaultTableModel) jTableRekapMenu.getModel();
        DefaultTableModel modelPlg = (DefaultTableModel) jTableRekapPlg.getModel();
        int totalPendapatan = 0;
        
        // Rekap Pelanggan
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM penjualan ORDER BY TotalBeli DESC";
            ResultSet r = s.executeQuery(sql);
            
            
            while(r.next()) {
                modelPlg.addRow(new Object[] {
                r.getString("nama_pelanggan"),
                r.getInt("TotalBeli")
                });
                totalPendapatan += r.getInt("TotalBeli");
            }
            jLabel8.setText(String.valueOf(totalPendapatan));
            
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
        
        // Rekap Menu
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM penjualanrinci ORDER BY total DESC";
            ResultSet r = s.executeQuery(sql);
            
            
            while(r.next()) {
                modelMenu.addRow(new Object[] {
                r.getString("nama_menu"),
                r.getInt("total")
                });
            }
            
        } catch(Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    public void clear() {
        jTFKodeMenu.setText("");
        jTFNamaMenu.setText("");
        jTFHargaMenu.setText("");
    }
    
    public MenuAdmin() {
        initComponents();
        
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();

        // membuat titik x dan y
        int x = layar.width / 2  - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;

        this.setLocation(x, y-20);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        labelIdPelanggan = new javax.swing.JLabel();
        jTFIdPelanggan = new javax.swing.JTextField();
        LabelNamaPelanggan = new javax.swing.JLabel();
        jTFNamaPelanggan = new javax.swing.JTextField();
        LabelAlamatPelanggan = new javax.swing.JLabel();
        jTFAlamatPelanggan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePelanggan = new javax.swing.JTable();
        btnBackPelanggan = new javax.swing.JButton();
        btnTambahPelanggan = new javax.swing.JButton();
        btnUbahPelanggan = new javax.swing.JButton();
        btnHapusPelanggan = new javax.swing.JButton();
        btnShowPelanggan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelKodeMenu = new javax.swing.JLabel();
        jTFKodeMenu = new javax.swing.JTextField();
        labelNamaMenu = new javax.swing.JLabel();
        jTFNamaMenu = new javax.swing.JTextField();
        labelHargaMenu = new javax.swing.JLabel();
        jTFHargaMenu = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableMenuMinum = new javax.swing.JTable();
        btnTambahMenu = new javax.swing.JButton();
        btnUbahMenu = new javax.swing.JButton();
        btnHapusMenu = new javax.swing.JButton();
        btnBackMenu = new javax.swing.JButton();
        labelKodeMenu1 = new javax.swing.JLabel();
        jenisMenu = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableMenuMkn = new javax.swing.JTable();
        labelHargaMenu1 = new javax.swing.JLabel();
        labelHargaMenu2 = new javax.swing.JLabel();
        btnShowMkn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableRekapMenu = new javax.swing.JTable();
        btnShowRekap = new javax.swing.JButton();
        btnBackRekap = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableRekapPlg = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(140, 200, 243));
        setMinimumSize(new java.awt.Dimension(100, 100));

        jTabbedPane1.setAutoscrolls(true);

        jPanel4.setBackground(new java.awt.Color(93, 139, 244));
        jPanel4.setLayout(null);

        labelIdPelanggan.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelIdPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        labelIdPelanggan.setText("ID Pelanggan");
        jPanel4.add(labelIdPelanggan);
        labelIdPelanggan.setBounds(30, 30, 144, 25);

        jTFIdPelanggan.setBackground(new java.awt.Color(140, 197, 255));
        jTFIdPelanggan.setForeground(new java.awt.Color(0, 0, 0));
        jTFIdPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFIdPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(jTFIdPelanggan);
        jTFIdPelanggan.setBounds(240, 30, 350, 30);

        LabelNamaPelanggan.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        LabelNamaPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        LabelNamaPelanggan.setText("Nama Pelanggan");
        jPanel4.add(LabelNamaPelanggan);
        LabelNamaPelanggan.setBounds(30, 80, 150, 25);

        jTFNamaPelanggan.setBackground(new java.awt.Color(140, 197, 255));
        jTFNamaPelanggan.setForeground(new java.awt.Color(0, 0, 0));
        jTFNamaPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNamaPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(jTFNamaPelanggan);
        jTFNamaPelanggan.setBounds(240, 80, 350, 30);

        LabelAlamatPelanggan.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        LabelAlamatPelanggan.setForeground(new java.awt.Color(255, 255, 255));
        LabelAlamatPelanggan.setText("Alamat Pelanggan");
        jPanel4.add(LabelAlamatPelanggan);
        LabelAlamatPelanggan.setBounds(30, 130, 157, 25);

        jTFAlamatPelanggan.setBackground(new java.awt.Color(140, 197, 255));
        jTFAlamatPelanggan.setForeground(new java.awt.Color(0, 0, 0));
        jTFAlamatPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFAlamatPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(jTFAlamatPelanggan);
        jTFAlamatPelanggan.setBounds(240, 130, 350, 30);

        jTablePelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Alamat"
            }
        ));
        jScrollPane1.setViewportView(jTablePelanggan);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(30, 250, 560, 240);

        btnBackPelanggan.setText("< Kembali");
        btnBackPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(btnBackPelanggan);
        btnBackPelanggan.setBounds(30, 540, 130, 30);

        btnTambahPelanggan.setText("Tambah");
        btnTambahPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(btnTambahPelanggan);
        btnTambahPelanggan.setBounds(30, 180, 100, 22);

        btnUbahPelanggan.setText("Ubah");
        btnUbahPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUbahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(btnUbahPelanggan);
        btnUbahPelanggan.setBounds(150, 180, 75, 22);

        btnHapusPelanggan.setText("Hapus");
        btnHapusPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHapusPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(btnHapusPelanggan);
        btnHapusPelanggan.setBounds(240, 180, 75, 22);

        btnShowPelanggan.setText("Tampilkan Data");
        btnShowPelanggan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnShowPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPelangganActionPerformed(evt);
            }
        });
        jPanel4.add(btnShowPelanggan);
        btnShowPelanggan.setBounds(430, 200, 160, 22);

        jTabbedPane1.addTab("DAFTAR PELANGGAN", jPanel4);

        jPanel2.setBackground(new java.awt.Color(93, 139, 244));
        jPanel2.setAutoscrolls(true);
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(null);

        labelKodeMenu.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelKodeMenu.setForeground(new java.awt.Color(255, 255, 255));
        labelKodeMenu.setText("Kode Menu");
        jPanel2.add(labelKodeMenu);
        labelKodeMenu.setBounds(30, 60, 144, 25);

        jTFKodeMenu.setBackground(new java.awt.Color(140, 197, 255));
        jTFKodeMenu.setForeground(new java.awt.Color(0, 0, 0));
        jTFKodeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFKodeMenuActionPerformed(evt);
            }
        });
        jPanel2.add(jTFKodeMenu);
        jTFKodeMenu.setBounds(240, 60, 350, 30);

        labelNamaMenu.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelNamaMenu.setForeground(new java.awt.Color(255, 255, 255));
        labelNamaMenu.setText("Nama Menu");
        jPanel2.add(labelNamaMenu);
        labelNamaMenu.setBounds(30, 100, 108, 25);

        jTFNamaMenu.setBackground(new java.awt.Color(140, 197, 255));
        jTFNamaMenu.setForeground(new java.awt.Color(0, 0, 0));
        jTFNamaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFNamaMenuActionPerformed(evt);
            }
        });
        jPanel2.add(jTFNamaMenu);
        jTFNamaMenu.setBounds(240, 100, 350, 30);

        labelHargaMenu.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelHargaMenu.setForeground(new java.awt.Color(255, 255, 255));
        labelHargaMenu.setText("Daftar Minuman");
        jPanel2.add(labelHargaMenu);
        labelHargaMenu.setBounds(30, 400, 160, 25);

        jTFHargaMenu.setBackground(new java.awt.Color(140, 197, 255));
        jTFHargaMenu.setForeground(new java.awt.Color(0, 0, 0));
        jTFHargaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFHargaMenuActionPerformed(evt);
            }
        });
        jPanel2.add(jTFHargaMenu);
        jTFHargaMenu.setBounds(240, 140, 350, 30);

        jTableMenuMinum.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Menu", "Nama Menu", "Harga Menu"
            }
        ));
        jScrollPane2.setViewportView(jTableMenuMinum);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(30, 430, 560, 110);

        btnTambahMenu.setText("Tambah");
        btnTambahMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambahMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahMenuActionPerformed(evt);
            }
        });
        jPanel2.add(btnTambahMenu);
        btnTambahMenu.setBounds(30, 190, 100, 22);

        btnUbahMenu.setText("Ubah");
        btnUbahMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUbahMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahMenuActionPerformed(evt);
            }
        });
        jPanel2.add(btnUbahMenu);
        btnUbahMenu.setBounds(150, 190, 75, 22);

        btnHapusMenu.setText("Hapus");
        btnHapusMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHapusMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusMenuActionPerformed(evt);
            }
        });
        jPanel2.add(btnHapusMenu);
        btnHapusMenu.setBounds(240, 190, 75, 22);

        btnBackMenu.setText("< Kembali");
        btnBackMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackMenuActionPerformed(evt);
            }
        });
        jPanel2.add(btnBackMenu);
        btnBackMenu.setBounds(30, 560, 110, 30);

        labelKodeMenu1.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelKodeMenu1.setForeground(new java.awt.Color(255, 255, 255));
        labelKodeMenu1.setText("Jenis Menu");
        jPanel2.add(labelKodeMenu1);
        labelKodeMenu1.setBounds(30, 20, 144, 25);

        jenisMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Makanan", "Minuman" }));
        jenisMenu.setSelectedItem(null);
        jenisMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jenisMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisMenuActionPerformed(evt);
            }
        });
        jPanel2.add(jenisMenu);
        jenisMenu.setBounds(240, 20, 100, 22);

        jTableMenuMkn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode Menu", "Nama Menu", "Harga Menu"
            }
        ));
        jScrollPane5.setViewportView(jTableMenuMkn);

        jPanel2.add(jScrollPane5);
        jScrollPane5.setBounds(30, 270, 560, 110);

        labelHargaMenu1.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelHargaMenu1.setForeground(new java.awt.Color(255, 255, 255));
        labelHargaMenu1.setText("Harga Menu");
        jPanel2.add(labelHargaMenu1);
        labelHargaMenu1.setBounds(30, 140, 109, 25);

        labelHargaMenu2.setFont(new java.awt.Font("Kristen ITC", 0, 18)); // NOI18N
        labelHargaMenu2.setForeground(new java.awt.Color(255, 255, 255));
        labelHargaMenu2.setText("Daftar Makanan");
        jPanel2.add(labelHargaMenu2);
        labelHargaMenu2.setBounds(30, 230, 160, 25);

        btnShowMkn.setText("Tampilkan Data");
        btnShowMkn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnShowMkn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowMknActionPerformed(evt);
            }
        });
        jPanel2.add(btnShowMkn);
        btnShowMkn.setBounds(420, 220, 170, 30);

        jTabbedPane1.addTab("DAFTAR MENU", jPanel2);

        jPanel3.setBackground(new java.awt.Color(93, 139, 244));
        jPanel3.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Kristen ITC", 0, 22)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Rekap Total Pendapatan");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(190, 30, 280, 31);

        jTableRekapMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Menu", "Total"
            }
        ));
        jScrollPane3.setViewportView(jTableRekapMenu);

        jPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(20, 140, 560, 120);

        btnShowRekap.setText("Tampilkan Data");
        btnShowRekap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnShowRekap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRekapActionPerformed(evt);
            }
        });
        jPanel3.add(btnShowRekap);
        btnShowRekap.setBounds(440, 90, 140, 30);

        btnBackRekap.setText("< Kembali");
        btnBackRekap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBackRekap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackRekapActionPerformed(evt);
            }
        });
        jPanel3.add(btnBackRekap);
        btnBackRekap.setBounds(30, 542, 110, 30);

        jTableRekapPlg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Pelanggan", "Total Belanja"
            }
        ));
        jScrollPane4.setViewportView(jTableRekapPlg);

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(20, 360, 560, 120);

        jLabel8.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("0");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(180, 110, 100, 20);

        jLabel9.setFont(new java.awt.Font("Kristen ITC", 0, 22)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Rekap Data Pelanggan");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(190, 280, 250, 31);

        jLabel10.setFont(new java.awt.Font("Kristen ITC", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total Pendapatan : Rp");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(20, 110, 170, 20);

        jTabbedPane1.addTab("REKAP PEMBELIAN", jPanel3);
        jPanel3.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFIdPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFIdPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFIdPelangganActionPerformed

    private void jTFNamaPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNamaPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNamaPelangganActionPerformed

    private void jTFAlamatPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFAlamatPelangganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFAlamatPelangganActionPerformed

    private void btnBackPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackPelangganActionPerformed
        // TODO add your handling code here:
        new PilihMenu().show();
        this.dispose();
    }//GEN-LAST:event_btnBackPelangganActionPerformed

    private void btnTambahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahPelangganActionPerformed
        // TODO add your handling code here:
        if(Warung.jplg<Warung.mplg) {
            // cek kesamaan id
            boolean ada = false;
            for (int i = 0; i < Warung.jplg; i++) {
                if(Warung.plg[i].getID().equalsIgnoreCase(jTFIdPelanggan.getText())) {
                    ada = true;
                    break;
                }
            }
            if(ada) {
                JOptionPane.showMessageDialog(this,"ID sudah ada!");
            }
            else {
                String kd = jTFIdPelanggan.getText();
                String nm = jTFNamaPelanggan.getText();
                String al = jTFAlamatPelanggan.getText();
                Warung.plg[Warung.jplg] = new cPelanggan(kd,nm,al);
                // Siapkan array string utnuk ditampilkan ke tabel
                String row[][] = new String[1][3];
                row[0][0] = Warung.plg[Warung.jplg].getID();
                row[0][1] = Warung.plg[Warung.jplg].getNama();
                row[0][2] = Warung.plg[Warung.jplg].getAlamat();
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                model.addRow(row[0]);
                Warung.jplg++;
                JOptionPane.showMessageDialog(this,"Berhasil menambahkan pelanggan...");
                // Kosongkan kembali text-field formnya
                jTFIdPelanggan.setText("");
                jTFNamaPelanggan.setText("");
                jTFAlamatPelanggan.setText("");
                // Selesai menambahkan
            }
        }
        else {
            JOptionPane.showMessageDialog(this,"Kapaitas penuh!");
            // Kosongkan kembali text-field formnya
            jTFIdPelanggan.setText("");
            jTFNamaPelanggan.setText("");
            jTFAlamatPelanggan.setText("");
        }
    }//GEN-LAST:event_btnTambahPelangganActionPerformed

    private void btnUbahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahPelangganActionPerformed
        // TODO add your handling code here:
        boolean ketemu = false;
        int indeks = 0;
        String id = JOptionPane.showInputDialog(this, "Masukkan ID");
        // Cek id di array pelanggan
        for (int i = 0; i < Warung.jplg; i++) {
            indeks = i;
            if(Warung.plg[i].getID().equalsIgnoreCase(id)) {
                ketemu = true;
                break;
            }
        }
        if(ketemu == true) {
            String al = JOptionPane.showInputDialog(this, "Masukkan alamat baru");
            int j = JOptionPane.showConfirmDialog(this, "Yakin diubah");
            if(j==0) {
                Warung.plg[indeks].setAlamat(al);
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                // Update sel baris ke-indeks, kolom ke-2
                model.setValueAt(al, indeks, 2);
                JOptionPane.showMessageDialog(this, "Alamat berhasil diperbarui...");
            }
            else JOptionPane.showMessageDialog(this, "Batal update!");
        }
        else {
            JOptionPane.showMessageDialog(this, "ID Tidak ada!");
        }
    }//GEN-LAST:event_btnUbahPelangganActionPerformed

    private void btnHapusPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusPelangganActionPerformed
        // TODO add your handling code here:
        boolean ketemu = false;
        int indeks = 0;
        String id = JOptionPane.showInputDialog(this, "Masukkan ID");
        for (int i = 0; i < Warung.jplg; i++) {
            indeks = i;
            if(Warung.plg[i].getID().equalsIgnoreCase(id)) {
                ketemu = true;
                break;
            }
        }
        if(ketemu == true) {
            int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
            if(j==0) {
                for (int i = indeks; i < Warung.jplg; i++) {
                    if(i==Warung.jplg-1) {
                        Warung.plg[i] = null;
                    } else {
                        Warung.plg[i] = Warung.plg[i+1];
                    }
                }
                Warung.jplg--;
                //Update isi tabel
                DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
                model.removeRow(indeks);
                JOptionPane.showMessageDialog(this, "Berhasil mengahpus pelanggan...");
            }
            else JOptionPane.showMessageDialog(this, "Batal dihapus!");
        }
        else {
            JOptionPane.showMessageDialog(this, "ID Tidak ada!");
        }
    }//GEN-LAST:event_btnHapusPelangganActionPerformed

    private void jTFKodeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFKodeMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFKodeMenuActionPerformed

    private void jTFNamaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFNamaMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFNamaMenuActionPerformed

    private void jTFHargaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFHargaMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFHargaMenuActionPerformed

    private void btnTambahMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahMenuActionPerformed
        // TODO add your handling code here:
        
        String kode = (String) jenisMenu.getSelectedItem();
        if(kode == "Makanan") {
            if(Warung.jmk<Warung.mmk) {
                // cek kesamaan kode
                boolean ada = false;
                for (int i = 0; i < Warung.jmk; i++) {
                    if(Warung.mk[i].getKode().equalsIgnoreCase(jTFKodeMenu.getText())) {
                        ada = true;
                        break;
                    }
                }
                if(ada) {
                    JOptionPane.showMessageDialog(this,"Kode menu sudah ada!");
                }
                else {
                    String kd = jTFKodeMenu.getText();
                    String nm = jTFNamaMenu.getText();
                    String h = jTFHargaMenu.getText();
                    Warung.mk[Warung.jmk] = new cMakanan(kd,nm, Double.parseDouble(h));
                    // Siapkan array string utnuk ditampilkan ke tabel
                    String row[][] = new String[1][3];
                    row[0][0] = Warung.mk[Warung.jmk].getKode();
                    row[0][1] = Warung.mk[Warung.jmk].getNama();
                    row[0][2] = String.valueOf((int) Warung.mk[Warung.jmk].getHarga());
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMkn.getModel();
                    model.addRow(row[0]);
                    Warung.jmk++;
                    JOptionPane.showMessageDialog(this,"Berhasil menambahkan makanan...");
                    // Kosongkan kembali text-field formnya
                    clear();
                    jenisMenu.setSelectedItem(null);
                }
            }
            else {
                JOptionPane.showMessageDialog(this,"Kapasitas penuh!");
                // Kosongkan kembali text-field formnya
                clear();
            }
        }
        else if(kode == "Minuman") {
            if(Warung.jmi<Warung.mmi) {
                // cek kesamaan kode
                boolean ada = false;
                for (int i = 0; i < Warung.jmi; i++) {
                    if(Warung.mi[i].getKode().equalsIgnoreCase(jTFKodeMenu.getText())) {
                        ada = true;
                        break;
                    }
                }
                if(ada) {
                    JOptionPane.showMessageDialog(this,"Kode sudah ada!");
                }
                else {
                    String kd = jTFKodeMenu.getText();
                    String nm = jTFNamaMenu.getText();
                    String h = jTFHargaMenu.getText();
                    Warung.mi[Warung.jmi] = new cMinuman(kd,nm, Double.parseDouble(h));
                    // Siapkan array string utnuk ditampilkan ke tabel
                    String row[][] = new String[1][3];
                    row[0][0] = Warung.mi[Warung.jmi].getKode();
                    row[0][1] = Warung.mi[Warung.jmi].getNama();
                    row[0][2] = String.valueOf((int) Warung.mi[Warung.jmi].getHarga());
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMinum.getModel();
                    model.addRow(row[0]);
                    Warung.jmi++;
                    JOptionPane.showMessageDialog(this,"Berhasil menambahkan minuman...");
                    // Kosongkan kembali text-field formnya
                    clear();
                    jenisMenu.setSelectedItem(null);
                }
            }
            else {
                JOptionPane.showMessageDialog(this,"Kapasitas penuh!");
                // Kosongkan kembali text-field formnya
                clear();
            }
        }
        else {
            JOptionPane.showMessageDialog(this,"Kode menu tidak valid");
        }
    }//GEN-LAST:event_btnTambahMenuActionPerformed

    private void btnUbahMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahMenuActionPerformed
        // TODO add your handling code here:
        int indeks = 0;
        boolean ketemu = false;
        String inputKd = JOptionPane.showInputDialog(this, "Masukkan Kode Menu");
        int kdMK = inputKd.toLowerCase().indexOf("mk");
        int kdMI = inputKd.toLowerCase().indexOf("mi");
        if(kdMK == 0) {
            for (int i = 0; i < Warung.jmk; i++) {
                indeks = i;
                if (Warung.mk[i].getKode().equalsIgnoreCase(inputKd)) {
                    ketemu = true;
                    break;
                }
            }
            if(ketemu) {
                String hb = JOptionPane.showInputDialog(this, "Masukkan harga baru");
                int j = JOptionPane.showConfirmDialog(this, "Yakin diubah?");
                if(j==0) {
                    Warung.mk[indeks].setHarga(Double.parseDouble(hb));
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMkn.getModel();
                    // Update sel baris ke-indeks, kolom ke-2
                    model.setValueAt(hb, indeks, 2);
                    JOptionPane.showMessageDialog(this, "Harga menu berhasil diperbarui...");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Batal update!");
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Kode Tidak ditemukan");
            }
        }
        else if(kdMI == 0) {
            for (int i = 0; i < Warung.jmi; i++) {
                indeks = i;
                if (Warung.mi[i].getKode().equalsIgnoreCase(inputKd)) {
                    ketemu = true;
                    break;
                }
            }
            if(ketemu) {
                String hb = JOptionPane.showInputDialog(this, "Masukkan harga baru");
                int j = JOptionPane.showConfirmDialog(this, "Yakin diubah?");
                if(j==0) {
                    Warung.mi[indeks].setHarga(Double.parseDouble(hb));
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMinum.getModel();
                    // Update sel baris ke-indeks, kolom ke-2
                    model.setValueAt(hb, indeks, 2);
                    JOptionPane.showMessageDialog(this, "Harga menu berhasil diperbarui...");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Batal update!");
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Kode Tidak ditemukan");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Kode Tidak valid");
        }
    }//GEN-LAST:event_btnUbahMenuActionPerformed

    private void btnHapusMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusMenuActionPerformed
        // TODO add your handling code here:
        int indeks = 0;
        boolean ketemu = false;
        String inputKd = JOptionPane.showInputDialog(this, "Masukkan Kode Menu");
        int kdMK = inputKd.toLowerCase().indexOf("mk");
        int kdMI = inputKd.toLowerCase().indexOf("mi");
        if(kdMK == 0) {
            for (int i = 0; i < Warung.jmk; i++) {
                indeks = i;
                if (Warung.mk[i].getKode().equalsIgnoreCase(inputKd)) {
                    ketemu = true;
                    break;
                }
            }
            if(ketemu) {
                int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
                if(j==0) {
                    for (int i = indeks; i < Warung.jmk; i++) {
                        if(i==Warung.jmk-1) {
                            Warung.mk[i] = null;
                        } else {
                            Warung.mk[i] = Warung.mk[i+1];
                        }
                    }
                    Warung.jmk--;
                    //Update isi tabel
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMkn.getModel();
                    model.removeRow(indeks);
                    JOptionPane.showMessageDialog(this, "Berhasil menghapus makanan");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Batal dihapus!");
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Kode Tidak ditemukan");
            }
        }
        else if(kdMI == 0) {
            for (int i = 0; i < Warung.jmi; i++) {
                indeks = i;
                if (Warung.mi[i].getKode().equalsIgnoreCase(inputKd)) {
                    ketemu = true;
                    break;
                }
            }
            if(ketemu) {
                int j = JOptionPane.showConfirmDialog(this, "Yakin dihapus?");
                if(j==0) {
                    for (int i = indeks; i < Warung.jmi; i++) {
                        if(i==Warung.jmi-1) {
                            Warung.mi[i] = null;
                        } else {
                            Warung.mi[i] = Warung.mi[i+1];
                        }
                    }
                    Warung.jmi--;
                    //Update isi tabel
                    DefaultTableModel model = (DefaultTableModel)jTableMenuMinum.getModel();
                    model.removeRow(indeks);
                    JOptionPane.showMessageDialog(this, "Berhasil menghapus minuman");
                }
                else {
                    JOptionPane.showMessageDialog(this, "Batal dihapus!");
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Kode Tidak ditemukan");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Kode Tidak valid");
        }
    }//GEN-LAST:event_btnHapusMenuActionPerformed

    private void btnShowPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPelangganActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)jTablePelanggan.getModel();
        if(model.getRowCount()<1) {
            String row[][] = new String[Warung.jplg][3];
            for (int i = 0; i < Warung.jplg; i++) {
                row[i][0] = Warung.plg[i].getID();
                row[i][1] = Warung.plg[i].getNama();
                row[i][2] = Warung.plg[i].getAlamat();
                model.addRow(row[i]);
            }
        }
    }//GEN-LAST:event_btnShowPelangganActionPerformed

    private void btnBackMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackMenuActionPerformed
        // TODO add your handling code here:
        new PilihMenu().show();
        this.dispose();
    }//GEN-LAST:event_btnBackMenuActionPerformed

    private void btnShowRekapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRekapActionPerformed
        // TODO add your handling code here:
        showRekap();
    }//GEN-LAST:event_btnShowRekapActionPerformed

    private void btnBackRekapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackRekapActionPerformed
        // TODO add your handling code here:
        new PilihMenu().show();
        this.dispose();
    }//GEN-LAST:event_btnBackRekapActionPerformed

    private void jenisMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenisMenuActionPerformed
        // TODO add your handling code here:
        if(jenisMenu.getSelectedItem() != null) {
            String pilihan = (String) jenisMenu.getSelectedItem();
            String kode = "";
            switch(pilihan) {
                case "Makanan":
                    kode = "MK";
                    break;
                case "Minuman":
                    kode = "MI";
                    break;
            }
            jTFKodeMenu.setText(kode);
        }
        
    }//GEN-LAST:event_jenisMenuActionPerformed

    private void btnShowMknActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowMknActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelMk = (DefaultTableModel)jTableMenuMkn.getModel();
        DefaultTableModel modelMi = (DefaultTableModel)jTableMenuMinum.getModel();
        if(modelMk.getRowCount()<1 && modelMi.getRowCount()<1) {
            String rowMk[][] = new String[Warung.jmk][3];
            for (int i = 0; i < Warung.jmk; i++) {
                rowMk[i][0] = Warung.mk[i].getKode();
                rowMk[i][1] = Warung.mk[i].getNama();
                rowMk[i][2] = String.valueOf((int) Warung.mk[i].getHarga());
                modelMk.addRow(rowMk[i]);
            }
            String rowMi[][] = new String[Warung.jmi][3];
            for (int i = 0; i < Warung.jmi; i++) {
                rowMi[i][0] = Warung.mi[i].getKode();
                rowMi[i][1] = Warung.mi[i].getNama();
                rowMi[i][2] = String.valueOf((int) Warung.mi[i].getHarga());
                modelMi.addRow(rowMi[i]);
            }
        }
    }//GEN-LAST:event_btnShowMknActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelAlamatPelanggan;
    private javax.swing.JLabel LabelNamaPelanggan;
    private javax.swing.JButton btnBackMenu;
    private javax.swing.JButton btnBackPelanggan;
    private javax.swing.JButton btnBackRekap;
    private javax.swing.JButton btnHapusMenu;
    private javax.swing.JButton btnHapusPelanggan;
    private javax.swing.JButton btnShowMkn;
    private javax.swing.JButton btnShowPelanggan;
    private javax.swing.JButton btnShowRekap;
    private javax.swing.JButton btnTambahMenu;
    private javax.swing.JButton btnTambahPelanggan;
    private javax.swing.JButton btnUbahMenu;
    private javax.swing.JButton btnUbahPelanggan;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTFAlamatPelanggan;
    private javax.swing.JTextField jTFHargaMenu;
    private javax.swing.JTextField jTFIdPelanggan;
    private javax.swing.JTextField jTFKodeMenu;
    private javax.swing.JTextField jTFNamaMenu;
    private javax.swing.JTextField jTFNamaPelanggan;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableMenuMinum;
    private javax.swing.JTable jTableMenuMkn;
    private javax.swing.JTable jTablePelanggan;
    private javax.swing.JTable jTableRekapMenu;
    private javax.swing.JTable jTableRekapPlg;
    private javax.swing.JComboBox<String> jenisMenu;
    private javax.swing.JLabel labelHargaMenu;
    private javax.swing.JLabel labelHargaMenu1;
    private javax.swing.JLabel labelHargaMenu2;
    private javax.swing.JLabel labelIdPelanggan;
    private javax.swing.JLabel labelKodeMenu;
    private javax.swing.JLabel labelKodeMenu1;
    private javax.swing.JLabel labelNamaMenu;
    // End of variables declaration//GEN-END:variables
}
